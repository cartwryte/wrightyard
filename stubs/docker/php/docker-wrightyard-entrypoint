#!/bin/sh
set -e

WORKSPACE_PATH="/workspace"
OPENCART_PATH="${WORKSPACE_PATH}/.wrightyard/opencart"

cd "$WORKSPACE_PATH"

# --- STEP 1: Sync Docker User to host User ---
HOST_UID=$(stat -c %u .)
HOST_GID=$(stat -c %g .)

if [ "$HOST_UID" -eq 0 ]; then
    echo "Host user is root. Skipping user modification for security reasons."
elif [ "$HOST_UID" != "$(id -u www-data)" ]; then
    echo "Host UID ($HOST_UID) does not match container UID ($(id -u www-data)). Updating www-data user..."
    groupmod -o -g "$HOST_GID" www-data
    usermod -o -u "$HOST_UID" www-data
    echo "User www-data updated."
else
    echo "Host user UID already matches www-data UID. Skipping user modification."
fi

mkdir -p "$OPENCART_PATH" && cd "$OPENCART_PATH"

# --- STEP 2: Install OpenCart ---
if [ ! -f "index.php" ]; then
    echo "OpenCart not found. Installing version ${OPENCART_VERSION}..."
    git clone --depth 1 --branch "${OPENCART_VERSION}" https://github.com/opencart/opencart.git .
    mv upload/* . && rm -rf upload/ && rm -rf .git/
    cp config-dist.php config.php && cp admin/config-dist.php admin/config.php
    echo "Running OpenCart CLI installer..."
    php install/cli_install.php install \
        --username "$OPENCART_USERNAME" \
        --password "$OPENCART_PASSWORD" \
        --email "$OPENCART_ADMIN_EMAIL" \
        --http_server "$OPENCART_HTTP_SERVER" \
        --db_driver "$DB_DRIVER" \
        --db_hostname "$DB_HOSTNAME" \
        --db_username "$DB_USERNAME" \
        --db_password "$DB_PASSWORD" \
        --db_database "$DB_DATABASE" \
        --db_port "$DB_PORT" \
        --db_prefix "$DB_PREFIX"
    rm -rf install
    echo "OpenCart installation complete."
else
    echo "OpenCart is already installed. Skipping installation."
fi

# --- STEP 3: Link local package in dev mode via Composer path repository ---
if [ "$DEV_MODE" = "true" ]; then
  COMPOSER_JSON_PATH="$WORKSPACE_PATH/composer.json"

  if [ -f "$COMPOSER_JSON_PATH" ]; then
    # Read the package name from the project's composer.json.
    PACKAGE_NAME=$(php -r 'echo json_decode(file_get_contents("'"$COMPOSER_JSON_PATH"'"))->name;')

    # Sanitize the package name by removing any surrounding quotes.
    PACKAGE_NAME=$(echo "$PACKAGE_NAME" | tr -d '"')

    if [ -n "$PACKAGE_NAME" ]; then
      echo "---"
      echo "ðŸ“¦ Linking local package '$PACKAGE_NAME' in dev mode..."

      echo "1/4: Correcting vendor-dir path for post-installation..."
      composer config vendor-dir system/storage/vendor/

      echo "2/4: Registering local path repository..."
      composer config repositories.dev-workspace \
        '{"type":"path","url":"'"$WORKSPACE_PATH"'","options":{"symlink":true}}'

      echo "3/4: Allowing plugin '$PACKAGE_NAME'..."
      composer config --no-plugins allow-plugins."$PACKAGE_NAME" true

      echo "4/4: Requiring package '$PACKAGE_NAME'@dev..."
      composer require "$PACKAGE_NAME":"@dev"

      echo "âœ… Link successful."
      echo "---"
    else
      echo "Warning: Could not read package name from $COMPOSER_JSON_PATH."
    fi
  else
    echo "Warning: composer.json not found in $WORKSPACE_PATH. Cannot link package."
  fi
fi

# --- STEP 4: Fix permissions ---
echo "Ensuring correct ownership for all files and directories..."
chown -R www-data:www-data "$OPENCART_PATH"

echo "Setting correct permissions for directories (755)..."
find "$OPENCART_PATH" -type d -exec chmod 755 {} +

echo "Setting correct permissions for files (644)..."
find "$OPENCART_PATH" -type f -exec chmod 644 {} +

echo "Setting specific permissions for system/storage directory (775 for dirs, 664 for files)..."
find "$OPENCART_PATH"/system/storage -type d -exec chmod 775 {} +
find "$OPENCART_PATH"/system/storage -type f -exec chmod 664 {} +

echo "Permissions set successfully."

# --- STEP 5: Start PHP-FPM ---
echo "Starting PHP-FPM..."
exec "$@"
